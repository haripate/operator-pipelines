---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: github-add-comment
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/categories: Git
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/tags: github
    tekton.dev/displayName: "add github comment"
spec:
  description: >-
    This Task will add a comment to a pull request or an issue.
    It can take either a filename or a comment as input and can
    post the comment back to GitHub accordingly.
  workspaces:
    - name: github-bot-token
    - name: comment-file
      optional: true
      description: The optional workspace containing comment file to be posted.

  results:
    - name: OLD_COMMENT
      description: The old text of the comment, if any.

    - name: NEW_COMMENT
      description: The new text of the comment, if any.

  params:
    - name: GITHUB_HOST_URL
      description: |
        The GitHub host, adjust this if you run a GitHub enteprise.
      default: "api.github.com"
      type: string

    - name: API_PATH_PREFIX
      description: |
        The API path prefix, GitHub Enterprise has a prefix e.g. /api/v3
      default: ""
      type: string

    - name: REQUEST_URL
      description: |
        The GitHub issue or pull request URL where we want to add a new
        comment.
      type: string

    - name: COMMENT_OR_FILE
      description: |
        The actual comment to add or the filename containing comment to post.
      type: string

    - name: COMMENT_TAG
      description: |
        An invisible tag to be added into the comment. The tag is made
        invisible by embedding in an an HTML comment. The tag allows for later
        retrieval of the comment, and it allows replacing an existing comment.
      type: string
      default: ""

    - name: REPLACE
      description: |
        When a tag is specified, and `REPLACE` is `true`, look for a comment
        with a matching tag and replace it with the new comment.
      type: string
      default: "false"  # Alternative value: "true"

    - name: test_result

  steps:
    - name: post-comment
      workingDir: $(workspaces.comment-file.path)
      env:
        - name: GITHUBTOKEN
          value: $(workspaces.github-bot-token.path)

      image: quay.io/redhat-isv/operator-pipelines-images:latest
      script: |
        #! /usr/bin/env bash
        set -xe
        
        git-add-comment \
          --request-url "$(params.REQUEST_URL)" \
          --comment-or-file "$(params.COMMENT_OR_FILE)" \
          --test-result "$(params.test_result)" \
          --comment-file "$(workspaces.comment-file.bound)" \
          --old-comment "$(results.OLD_COMMENT.path)" \
          --new-comment "$(results.OLD_COMMENT.path)"
