---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: verify-ci-results
spec:
  params:
    - name: preflight_results
    - name: preflight_min_version
    - name: ci_min_version
  results:
    - name: test_result
      description: Result from the preflight test.
  workspaces:
    - name: results
  steps:
    - name: verify-ci-results
      image: quay.io/redhat-isv/operator-pipelines-images:latest
      workingDir: $(workspaces.results.path)
      env:
        - name: PREFLIGHT_MIN_VERSION
          value: $(params.preflight_min_version)
        - name: PREFLIGHT_RESULTS
          value: $(params.preflight_results)
      script: |
        #! /usr/bin/env bash
        set -xe -o pipefail

        # did preflight/ CI have the latest version?
        PREFLIGHT_VERSION=$(echo $PREFLIGHT_RESULTS | jq '.test_library.version' |  tr -d '"' | grep .)
        if [ "$(printf '%s\n' "$PREFLIGHT_MIN_VERSION" "$PREFLIGHT_VERSION" | sort -V | head -n1)" = "$PREFLIGHT_MIN_VERSION" ]; then
          echo "Preflight version $PREFLIGHT_VERSION satisfies the minimun requirement of version $PREFLIGHT_MIN_VERSION"
        else
          echo "Preflight version $PREFLIGHT_VERSION must be $PREFLIGHT_MIN_VERSION or higher."
          echo -n "failure" | tee $(results.test_result.path)
          exit 1
        fi
        # Did the tests pass?
        # In case of failure- comment on the PR with tailored support link
        CHECK_RESULTS=$(echo $PREFLIGHT_RESULTS | jq '.passed' | tr -d '"' | grep .)
        if [ $CHECK_RESULTS = "false" ]; then
          echo -n "failure" | tee $(results.test_result.path)
          exit 0
        fi

        echo -n "success" | tee $(results.test_result.path)
